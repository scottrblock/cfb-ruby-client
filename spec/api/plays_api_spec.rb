=begin
#College Football Data API

#This is an API for accessing all sorts of college football data.  It currently has a wide array of data ranging from play by play to player statistics to game scores and more.

OpenAPI spec version: 1.20.0
Contact: admin@collegefootballdata.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::PlaysApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PlaysApi' do
  before do
    # run before each test
    @instance = SwaggerClient::PlaysApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlaysApi' do
    it 'should create an instance of PlaysApi' do
      expect(@instance).to be_instance_of(SwaggerClient::PlaysApi)
    end
  end

  # unit tests for get_play_stat_types
  # Get play stat type lists
  # Type of play stats
  # @param [Hash] opts the optional parameters
  # @return [Array<PlayStatType>]
  describe 'get_play_stat_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_play_stats
  # Get play statistics
  # Gets player stats associated by play (limit 1000)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :year Year filter
  # @option opts [Integer] :week Week filter
  # @option opts [String] :team Team filter
  # @option opts [Integer] :game_id gameId filter (from /games endpoint)
  # @option opts [Integer] :athlete_id athleteId filter (from /roster endpoint)
  # @option opts [Integer] :stat_type_id statTypeId filter (from /play/stat/types endpoint)
  # @return [Array<PlayStat>]
  describe 'get_play_stats test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_play_types
  # Get play type list
  # Types of plays
  # @param [Hash] opts the optional parameters
  # @return [Array<PlayType>]
  describe 'get_play_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_plays
  # Get play information. Requires either a week or team to be specified.
  # Play results
  # @param year Year filter
  # @param [Hash] opts the optional parameters
  # @option opts [String] :season_type Season type filter
  # @option opts [Integer] :week Week filter (required if team, offense, or defense, not specified)
  # @option opts [String] :team Team filter
  # @option opts [String] :offense Offensive team filter
  # @option opts [String] :defense Defensive team filter
  # @option opts [String] :conference Conference filter
  # @option opts [String] :offense_conference Offensive conference filter
  # @option opts [String] :defense_conference Defensive conference filter
  # @option opts [Integer] :play_type Play type filter
  # @return [Array<Play>]
  describe 'get_plays test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
