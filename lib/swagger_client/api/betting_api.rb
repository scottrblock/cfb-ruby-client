=begin
#College Football Data API

#This is an API for accessing all sorts of college football data.  It currently has a wide array of data ranging from play by play to player statistics to game scores and more.

OpenAPI spec version: 1.20.0
Contact: admin@collegefootballdata.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.10

=end

require 'uri'

module SwaggerClient
  class BettingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get betting line information
    # Closing betting lines
    # @param year Year/season filter for games
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :week Week filter
    # @option opts [String] :season_type Season type filter (regular or postseason) (default to regular)
    # @option opts [String] :team Team
    # @option opts [String] :home Home team filter
    # @option opts [String] :away Away team filter
    # @option opts [String] :conference Conference abbreviation filter
    # @return [Array<GameLines>]
    def get_lines(year, opts = {})
      data, _status_code, _headers = get_lines_with_http_info(year, opts)
      data
    end

    # Get betting line information
    # Closing betting lines
    # @param year Year/season filter for games
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :week Week filter
    # @option opts [String] :season_type Season type filter (regular or postseason)
    # @option opts [String] :team Team
    # @option opts [String] :home Home team filter
    # @option opts [String] :away Away team filter
    # @option opts [String] :conference Conference abbreviation filter
    # @return [Array<(Array<GameLines>, Fixnum, Hash)>] Array<GameLines> data, response status code and response headers
    def get_lines_with_http_info(year, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BettingApi.get_lines ...'
      end
      # verify the required parameter 'year' is set
      if @api_client.config.client_side_validation && year.nil?
        fail ArgumentError, "Missing the required parameter 'year' when calling BettingApi.get_lines"
      end
      # resource path
      local_var_path = '/lines'

      # query parameters
      query_params = {}
      query_params[:'year'] = year
      query_params[:'week'] = opts[:'week'] if !opts[:'week'].nil?
      query_params[:'seasonType'] = opts[:'season_type'] if !opts[:'season_type'].nil?
      query_params[:'team'] = opts[:'team'] if !opts[:'team'].nil?
      query_params[:'home'] = opts[:'home'] if !opts[:'home'].nil?
      query_params[:'away'] = opts[:'away'] if !opts[:'away'].nil?
      query_params[:'conference'] = opts[:'conference'] if !opts[:'conference'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<GameLines>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BettingApi#get_lines\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
